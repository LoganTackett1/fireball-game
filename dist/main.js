(()=>{"use strict";var e={424:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),c=t.n(a)()(o());c.push([e.id,"body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ncanvas {\n  border: black 5px solid;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB",sourcesContent:["body {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\ncanvas {\r\n  border: black 5px solid;\r\n}\r\n"],sourceRoot:""}]);const s=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var u=0;u<e.length;u++){var p=[].concat(e[u]);r&&c[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],s=0;s<e.length;s++){var i=e[s],u=r.base?i[0]+r.base:i[0],p=a[u]||0,l="".concat(u," ").concat(p);a[u]=p+1;var y=t(l),d={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==y)n[y].references++,n[y].updater(d);else{var f=o(d,r);r.byIndex=s,n.splice(s,0,{identifier:l,updater:f,references:1})}c.push(l)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var s=t(a[c]);n[s].references--}for(var i=r(e,o),u=0;u<a.length;u++){var p=t(a[u]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},655:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{function e(e,n,t,r){return[e,400-n,t,-r]}var n=t(379),r=t.n(n),o=t(795),a=t.n(o),c=t(569),s=t.n(c),i=t(565),u=t.n(i),p=t(216),l=t.n(p),y=t(655),d=t.n(y),f=t(424),h={};h.styleTagTransform=d(),h.setAttributes=u(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=l(),r()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const v=document.createElement("canvas");document.body.appendChild(v),v.width=800,v.height=400;const m=function(){const e={},n=[];let t=0;function r(e){const n=e.events[e.events.length-1];"jump"===n&&e.physics.y<=100&&(e.physics.a_Vertical=-1440,e.physics.v_Vertical=360),"k"===n.charAt(0)&&("u"===n.charAt(1)?e.physics.v_Horizontal=0:"d"===n.charAt(1)&&("a"===n.charAt(2)?e.physics.v_Horizontal=-120:"d"===n.charAt(2)&&(e.physics.v_Horizontal=120))),e.events.pop()}return{gameState:e,newPlayer:function(){return t+=1,n.push(`player${t}`),e[`player${t}`]={events:[],physics:{x:400,y:100,a_Vertical:0,v_Vertical:0,v_Horizontal:0}},`player${t}`},players:n,newEvent:function(n,t){e[n].events.push(t)},next:function(n){Object.keys(e).forEach((n=>{const t=e[n],{events:o}=t;for(let e=o.length-1;e>=0;e-=1)r(t)})),Object.keys(e).forEach((t=>{const r=e[t];r.physics.x+=r.physics.v_Horizontal*n,r.physics.y+=r.physics.v_Vertical*n+r.physics.a_Vertical*n*n*.5,r.physics.v_Vertical+=r.physics.a_Vertical*n,r.physics.y<100&&(r.physics.y=100,r.physics.v_Vertical=0,r.physics.a_Vertical=0),r.physics.x<15&&(r.physics.x=15),r.physics.x>785&&(r.physics.x=785)}))}}}();m.me=m.gameState[m.newPlayer()],m.keyDown={W:!1,A:!1,D:!1,Space:!1},window.addEventListener("keydown",(e=>{"A"===e.key||"a"===e.key?m.keyDown.A=!0:"D"===e.key||"d"===e.key?m.keyDown.D=!0:"W"===e.key||"w"===e.key?m.keyDown.W=!0:" "===e.key&&(m.keyDown.Space=!0)})),window.addEventListener("keyup",(e=>{"A"===e.key||"a"===e.key?m.keyDown.A=!1:"D"===e.key||"d"===e.key?m.keyDown.D=!1:"W"===e.key||"w"===e.key?m.keyDown.W=!1:" "===e.key&&(m.keyDown.Space=!1)}));const k=v.getContext("2d");setInterval((async function(){!function(){const e=[];!0!==m.keyDown.W&&!0!==m.keyDown.Space||e.push("jump"),!0===m.keyDown.A&&!1===m.keyDown.D&&e.push("kda"),!1===m.keyDown.A&&!0===m.keyDown.D&&e.push("kdd"),!1===m.keyDown.A&&!1===m.keyDown.D&&e.push("ku"),!0===m.keyDown.A&&!0===m.keyDown.D&&e.push("ku"),e.forEach((e=>{m.me.events.push(e)}))}(),m.next(.016),k.clearRect(0,0,v.width,v.height),function(n,t){n.beginPath(),n.rect(...e(0,0,800,100)),n.fillStyle="Green",n.fill(),n.closePath(),Object.keys(t).forEach((r=>{const o=t[r].physics;n.beginPath(),n.rect(...e(Math.round(o.x-15),Math.round(o.y),30,30)),n.fillStyle="Red",n.fill(),n.closePath()}))}(k,m.gameState)}),16)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,